
KERNEL_HEADERS=-I@KERNEL_HEADERS@

CC=@CC@
CFLAGS = -Wall @CFLAGS@ $(KERNEL_HEADERS)

prefix=@prefix@
exec_prefix=@exec_prefix@
includedir=@includedir@
libdir=@libdir@
LIBFILE=libbridge.so

libbridge_SOURCES= \
	libbridge_devif.c \
	libbridge_if.c \
	libbridge_init.c \
	libbridge_misc.c 

libbridge_OBJECTS=$(libbridge_SOURCES:.c=.o)

all:    $(LIBFILE)

# At present there is no need for a bridge-utils-devel package
# (I respectfully disagree -- bacs)
install:
	cp $(LIBFILE) $(libdir)/$(LIBFILE).1.0
	ln -sf $(libdir)/$(LIBFILE).1.0 $(libdir)/$(LIBFILE).1
	ln -sf $(libdir)/$(LIBFILE).1 $(libdir)/$(LIBFILE)

clean:
	rm -f *.o $(LIBFILE)

libbridge.so: $(libbridge_OBJECTS)
	$(CC) $(CFLAGS) $(INCLUDE) -shared -o libbridge.so $(libbridge_OBJECTS)

%.o: %.c libbridge.h libbridge_private.h
	$(CC) $(CFLAGS) $(INCLUDE) -fPIC -c $<

libbridge_compat.o:	libbridge_compat.c if_index.c
	$(CC) $(CFLAGS) -fPIC -c libbridge_compat.c
